// Copyright (c) 2016 Pani Networks
// All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License. You may obtain
// a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations
// under the License.

// This file if generate. Do not edit.

package policytools

import (
	"github.com/romana/core/agent/firewall"
	"github.com/romana/core/common/api"
)

var Blueprints = map[string]RuleBlueprint{
                                   
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerLabel,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeLabelMatchDst,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeLabelMatchSrc,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerLabel,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeLabelMatchSrc,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeLabelMatchDst,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerLabel,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeLabelMatchDst,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeLabelMatchSrc,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerLabel,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeLabelMatchSrc,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeLabelMatchDst,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerLabel,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeDstTenantMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeLabelMatchSrc,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerLabel,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeSrcTenantMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeLabelMatchDst,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerLabel,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeDstTenantMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeLabelMatchSrc,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerLabel,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeSrcTenantMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeLabelMatchDst,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerAny,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeLabelMatchDst,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerAny,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeLabelMatchSrc,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerAny,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeLabelMatchDst,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerAny,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeLabelMatchSrc,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerAny,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeDstTenantMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerAny,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeSrcTenantMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerAny,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeDstTenantMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerAny,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeSrcTenantMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerLabel,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeDstTenantSegmentMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeLabelMatchSrc,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerLabel,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeSrcTenantSegmentMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeLabelMatchDst,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerLabel,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeDstTenantSegmentMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeLabelMatchSrc,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerLabel,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeSrcTenantSegmentMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeLabelMatchDst,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerAny,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeDstTenantSegmentMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerAny,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeSrcTenantSegmentMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerAny,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeDstTenantSegmentMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerAny,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeSrcTenantSegmentMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerCIDR,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeLabelMatchDst,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeSrcCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerCIDR,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeLabelMatchSrc,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeDstCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerCIDR,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeLabelMatchDst,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerCIDR,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeLabelMatchSrc,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeDstCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerCIDR,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeDstTenantMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeSrcCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerCIDR,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeSrcTenantMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeDstCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerCIDR,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeDstTenantMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerCIDR,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeSrcTenantMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeDstCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerCIDR,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeDstTenantSegmentMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeSrcCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerCIDR,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeSrcTenantSegmentMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeDstCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerCIDR,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeDstTenantSegmentMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerCIDR,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeSrcTenantSegmentMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeDstCIDRMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerTenant,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeLabelMatchDst,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeSrcTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerTenant,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeLabelMatchSrc,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeDstTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerTenant,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeLabelMatchDst,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerTenant,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeLabelMatchSrc,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeDstTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerTenant,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeDstTenantMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeSrcTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerTenant,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeSrcTenantMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeDstTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerTenant,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeDstTenantMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerTenant,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeSrcTenantMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeDstTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerTenantSegment,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeLabelMatchDst,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeSrcTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerTenantSegment,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeLabelMatchSrc,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeDstTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerTenantSegment,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeLabelMatchDst,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerTenantSegment,
		TargetLabel,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeLabelMatchSrc,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeDstTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerTenantSegment,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeDstTenantMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeSrcTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerTenantSegment,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeSrcTenantMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeDstTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerTenantSegment,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeDstTenantMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerTenantSegment,
		TargetTenant,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeSrcTenantMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeDstTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerTenant,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeDstTenantSegmentMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeSrcTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerTenant,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeSrcTenantSegmentMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeDstTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerTenant,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeDstTenantSegmentMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerTenant,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeSrcTenantSegmentMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeDstTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerTenantSegment,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeDstTenantSegmentMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeSrcTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemePolicyOnTop,
		PeerTenantSegment,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MakeRomanaPolicyName,
		SecondRuleMatch:  MakeSrcTenantSegmentMatch,
		SecondRuleAction: MakeRomanaPolicyNameExtended,
		ThirdBaseChain:   MakeRomanaPolicyNameExtended,
		ThirdRuleMatch:   MakeDstTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerTenantSegment,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointIngress,
		TopRuleMatch:     MakeDstTenantSegmentMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionEgress,
		SchemeTargetOnTop,
		PeerTenantSegment,
		TargetTenantSegment,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameEndpointEgress,
		TopRuleMatch:     MakeSrcTenantSegmentMatch,
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeDstTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "DROP",
	},
                  
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerTenant,
		TargetHost,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameHostToEndpoint,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                                    
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerTenant,
		TargetHost,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameHostToEndpoint,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcTenantMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                                    
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerTenantSegment,
		TargetHost,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameHostToEndpoint,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                                    
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerTenantSegment,
		TargetHost,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameHostToEndpoint,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MakeSrcTenantSegmentMatch,
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                                    
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemePolicyOnTop,
		PeerLocal,
		TargetHost,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameHostToEndpoint,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                                    
	MakeBlueprintKey(
		api.PolicyDirectionIngress,
		SchemeTargetOnTop,
		PeerLocal,
		TargetHost,
	): RuleBlueprint{
		BaseChain:        firewall.ChainNameHostToEndpoint,
		TopRuleMatch:     MatchEndpoint(""),
		TopRuleAction:    MakeRomanaPolicyName,
		SecondBaseChain:  MatchPolicyString(""),
		SecondRuleMatch:  MatchEndpoint(""),
		SecondRuleAction: MatchPolicyString(""),
		ThirdBaseChain:   MakeRomanaPolicyName,
		ThirdRuleMatch:   MatchEndpoint(""),
		ThirdRuleAction:  MakeRomanaPolicyNameRules,
		FourthBaseChain:  MakeRomanaPolicyNameRules,
		FourthRuleMatch:  MakePolicyRuleWithAction,
		FourthRuleAction: "ACCEPT",
	},
                                                                                           
}
